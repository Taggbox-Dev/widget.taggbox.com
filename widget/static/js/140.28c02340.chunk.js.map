{"version":3,"file":"static/js/140.28c02340.chunk.js","mappings":"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","sources":["app/Components/UserComponents/ReportMedia/Elements/ReportSuccess.js","app/Components/UserComponents/ReportMedia/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\n\nexport default class ReportSuccess extends PureComponent {\n  render() {\n    return  <div className=\"tb_report_media_succ\">\n                <div className=\"tb_report_media_succ_00\">\n                    <div className=\"tb_report_media_title\">Success</div>\n                    <div className=\"tb_report_media_p\">This media has been successfully reported.</div>\n                    <div className=\"tb_report_media_succ_ico\">\n                        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 98.5 98.5\" enable-background=\"new 0 0 98.5 98.5\" space=\"preserve\">\n                            <path className=\"tb_report_media_suc_svg\" fill=\"none\" stroke-width=\"8\" stroke-miterlimit=\"10\" d=\"M81.7,17.8C73.5,9.3,62,4,49.2,4C24.3,4,4,24.3,4,49.2s20.3,45.2,45.2,45.2s45.2-20.3,45.2-45.2c0-8.6-2.4-16.6-6.5-23.4l0,0L45.6,68.2L24.7,47.3\"/>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { reportMedia, reportMediaClosePopUp } from '../../../../actions/themeActions'\nimport ReportSuccess from \"./Elements/ReportSuccess\";\n\nconst validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\nclass ReportMediaModal extends PureComponent {\n    state = {\n        email: '',\n        reason: '',\n        emailError: false,\n        reasonError: false,\n        submitErrorMessage: null,\n        modalShow: false,\n        successModal: false,\n        loadbtn: false\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.setState({ modalShow: true }), 100);\n        this.popUpCloseClckOnWindow()\n    }\n\n    onTextEmail = event => {\n        this.setState({ email: event.target.value, emailError: false }, () => {\n            if (this.state.email === null || this.state.email.length === 0 || !validateEmail(this.state.email) || this.state.email.includes(\"mailinator\")) this.setState({ emailError: true })\n        })\n    }\n\n    onTextReason = event => {\n        this.setState({ reason: event.target.value, reasonError: false }, () => {\n            if (this.state.reason === null || this.state.reason.length < 50) this.setState({ reasonError: true })\n        })\n    }\n\n    onSubmitData = event => {\n        const { email, reason } = this.state;\n        const { item, wall } = this.props;\n        const postId = item.id;\n        const wallId = wall.Wall.id;\n        const postData = {image:item.file, rating: item.rating, network: item.network.id, authorImage: item.author.picture, authorName: item.author.name, authorUsername: item.author.username, content: item.content, time: item.createdAt, mediaType : item.type}\n\n        if ((email && email.length > 0 && validateEmail(email) && !email.includes(\"mailinator\"))) {\n            if (reason != null && reason.length > 50) {\n                this.setState({ loadbtn: true })\n                reportMedia({ wall_id: wallId, post_id: postId, email: email, reason: reason, post_data: postData }).then((response) => {\n                    this.setState({ successModal: true })\n                })\n                    .catch((error) => {\n                        const { data } = error.response;\n                        if (data.response_code === 404) {\n                            this.setState({ submitErrorMessage: data.message })\n                        } else {\n                            this.setState({ submitErrorMessage: 'Something went wrong' })\n                        }\n                        this.setState({ loadbtn: false })\n                    });\n            } else {\n                this.setState({ reasonError: true })\n            }\n        } else {\n            if (this.state.email === null || this.state.email.length === 0 || !validateEmail(this.state.email) || email.includes(\"mailinator\")) this.setState({ emailError: true })\n        }\n    }\n    onClose = event => {\n        const { reportMediaClosePopUp } = this.props;\n        reportMediaClosePopUp();\n    }\n    popUpCloseClckOnWindow=()=>{\n        var self=this;\n        document.addEventListener(\n          \"click\",\n          (event)=>{if(event.target.matches(\".tb_report_media_modal\")){\n            self.props.reportMediaClosePopUp()\n          }},\n          false\n        )\n      }\n\n    render() {\n        const { email, reason, emailError, reasonError, submitErrorMessage, successModal, modalShow, loadbtn } = this.state;\n        const { item } = this.props;\n        const mediaType = (item.type === 3 || item.type === 5) ? true : false\n        const isYoutubePost = (item.network.id === 7) ? true : false\n        const isAudio = item.isAudio === 1 ? true : false\n        return (\n            <div className={`tb_report_media_modal ${modalShow ? `tb_modal_show` : ``}`}>\n                <div className=\"tb_report_media_container\">\n                    <div className=\"tb_report_media_body\">\n                        <div className=\"tb_report_media_close\" onClick={this.onClose}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" >\n                                    <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\n                                        <rect x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\n                                        <rect transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n                        {successModal ? <ReportSuccess />\n                            : <div className=\"tb_report_media_wrapper\">\n                                <div className=\"tb_report_media_title\">Report This Post</div>\n                                <div className=\"tb_report_media_p\">This means it is inappropriate, it has violated a law, or it infringes upon someone's rights. Reporting this post will flag it for further review.</div>\n                                {item.filename !== '' && item.filename != null ? <div className=\"tb_report_media__\">\n                                    <div className=\"tb_report_media_img\" style={{ backgroundImage: `url(${item.filename})` }}>\n                                        {mediaType ? isYoutubePost ? <div className=\"tb_report_media_youtube_ico tb__icon tb-youtube-default\"><div className=\"tb_color_icon__ tb_d_youtube_path_1\"><div></div></div><div className=\"tb_color_icon__ tb_d_youtube_path_2\"><div></div></div></div> : \n                                        isAudio ? <div className=\"tb_report_media_ico tb__icon tb-audio\"><div></div></div> :\n                                        <div className=\"tb_report_media_video_ico tb__icon tb-play\"> </div> : ''}\n                                    </div>\n                                </div> : null}\n                                <div className=\"tb_report_media_form\">\n                                    <div className=\"tb_report_media_form_group\">\n                                        <div className=\"tb_report_media_label\">Email <div className=\"tb_report_media_required\">*</div> </div>\n                                        <input type=\"email\" value={email} className=\"tb_report_media_input\" onChange={this.onTextEmail} placeholder=\"Enter email address\" />\n                                        {emailError ? <div className=\"tb_report_media_error_\">* Please enter correct email.</div> : null}\n                                    </div>\n                                    <div className=\"tb_report_media_form_group\">\n                                        <div className=\"tb_report_media_label\">Reason <div className=\"tb_report_media_required\">*</div> </div>\n                                        <textarea className=\"tb_report_media_input tb_report_media_textarea\" value={reason} onChange={this.onTextReason} placeholder=\"I am reporting this media because...\"></textarea>\n                                        {reasonError ? <div className=\"tb_report_media_error_\">* Please enter minimun 50 characters</div> : null}\n                                    </div>\n                                    <div className=\"tb_report_media_buttons\">\n                                        <div className=\"tb_report_media_cancel\" onClick={this.onClose}>\n                                            Cancel\n                                    </div>\n                                        <div className={`tb_report_media_submit ${loadbtn ? 'tb_report_media_spinner' : ''}`} onClick={this.onSubmitData}>\n                                            Report\n                                    </div>\n                                    </div>\n                                    {submitErrorMessage && submitErrorMessage.length > 0 ? <div className=\"tb_report_media_error\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                            <g id=\"Stockholm-icons-/-Code-/-Info-circle\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                                <rect id=\"bound\" x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                                <circle id=\"Oval-5\" fill=\"#db4b20\" opacity=\"0.3\" cx=\"12\" cy=\"12\" r=\"10\" />\n                                                <rect id=\"Rectangle-9\" fill=\"#db4b20\" x=\"11\" y=\"10\" width=\"2\" height=\"7\" rx=\"1\" />\n                                                <rect id=\"Rectangle-9-Copy\" fill=\"#db4b20\" x=\"11\" y=\"7\" width=\"2\" height=\"2\" rx=\"1\" />\n                                            </g>\n                                        </svg>\n                                        {submitErrorMessage}\n                                    </div> : null}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        reportMediaClosePopUp: () => dispatch(reportMediaClosePopUp())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportMediaModal);"],"names":["ReportSuccess","className","version","id","xmlns","xlink","x","y","viewBox","space","fill","d","PureComponent","validateEmail","email","test","String","toLowerCase","ReportMediaModal","state","reason","emailError","reasonError","submitErrorMessage","modalShow","successModal","loadbtn","onTextEmail","event","setState","target","value","length","includes","onTextReason","onSubmitData","props","item","wall","postId","wallId","Wall","postData","image","file","rating","network","authorImage","author","picture","authorName","name","authorUsername","username","content","time","createdAt","mediaType","type","reportMedia","wall_id","post_id","post_data","then","response","catch","error","data","response_code","message","onClose","reportMediaClosePopUp","popUpCloseClckOnWindow","self","document","addEventListener","matches","setTimeout","this","isYoutubePost","isAudio","onClick","width","height","stroke","strokeWidth","fillRule","transform","rx","filename","style","backgroundImage","onChange","placeholder","opacity","cx","cy","r","connect","dispatch"],"sourceRoot":""}