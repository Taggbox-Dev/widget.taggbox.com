{"version":3,"file":"static/js/816.38b764da.chunk.js","mappings":"oSAKqBA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAeG,OAfHA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACjBC,WAAa,GAAG,EAChBC,MAAQ,CAAEC,cAAc,GAAhB,EAGRC,iBAAmB,SAACC,GAChB,IAAMC,EAAMD,EAAEE,OAAOC,aAAa,WAC7B,EAAKP,WAAWQ,SAASH,KAC1B,EAAKL,WAAWS,KAAKJ,GAChB,EAAKJ,MAAMC,cACZ,EAAKQ,oBAGhB,IAEDA,mBAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAoB,sFAChB,EAAKC,SAAS,CAAET,cAAc,IACxBG,EAAM,EAAKL,WAAW,GACtBY,EAAaC,SAASC,uBAAT,eAAwCT,IACvDA,IACAU,EAAAA,EAAAA,IAAqBV,GAAKW,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAG9B,IAFAC,EAAAA,EAAAA,MACA,EAAKlB,WAAWmB,QACZP,EACA,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAWS,OAAQD,IACnCR,EAAWQ,GAAGf,IAAMY,EAAKK,MAGjC,EAAKZ,mBACR,IACIa,OAAM,SAACC,GAEJ,GADA,EAAKxB,WAAWmB,QACZP,EACA,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAWS,OAAQD,IACnCR,EAAWQ,GAAGf,IAAMoB,EAAAA,GAG5B,EAAKf,mBACR,IAvBO,6CAwCnB,OAxCmB,8BA6BpB,WAAU,IAAD,OAEL,EAAyCgB,KAAKC,MAAtCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,mBAClB,OAAQD,EAAWA,EAASE,KAAI,SAACC,GAC7B,IAAMC,EAAWH,EAAmBE,GACpC,OAA8B,IAAvBC,EAASC,QAAQC,IAAW,qCAAG,gBAA0BC,UAAU,GAAG,UAASH,EAASE,GAAI7B,IAAK2B,EAASI,YAC7GC,QAAS,EAAKlC,iBAAkBmC,MAAO,CAAEC,QAAS,SADhB,eAAkBR,OACgB,EAC3E,IAEG,EAEP,OAvDgBhC,CAA0ByC,EAAAA,U","sources":["app/Components/customFunction/tikTok_Img_update.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { DELETE_RADIS_KEYS } from '../../../actions/themeActions';\nimport { NO_CAMERA_IMAGE } from '../../../constants';\nimport { TIKTOK_UPDATE_STATUS } from '../../../utils';\n\nexport default class tikTok_Img_update extends Component {\n    imageQueue = [];\n    state = { firstRequest: false }\n\n\n    handleImageError = (e) => {\n        const src = e.target.getAttribute(\"data-id\");\n        if (!this.imageQueue.includes(src)) {\n            this.imageQueue.push(src);\n            if (!this.state.firstRequest) {\n                this.processImageQueue()\n            }\n        }\n    };\n\n    processImageQueue = async () => {\n        this.setState({ firstRequest: true })\n        const src = this.imageQueue[0];\n        const imgTargets = document.getElementsByClassName(`imgID${src}`);\n        if (src) {\n            TIKTOK_UPDATE_STATUS(src).then(({ data }) => {\n                DELETE_RADIS_KEYS();\n                this.imageQueue.shift();\n                if (imgTargets) {\n                    for (let i = 0; i < imgTargets.length; i++) {\n                        imgTargets[i].src = data.media;\n                    }\n                }\n                this.processImageQueue()\n            })\n                .catch((error) => {\n                    this.imageQueue.shift();\n                    if (imgTargets) {\n                        for (let i = 0; i < imgTargets.length; i++) {\n                            imgTargets[i].src = NO_CAMERA_IMAGE;\n                        }\n                    }\n                    this.processImageQueue()\n                })\n\n        }\n    };\n\n\n    render() {\n\n        const { postData, completeDataObject } = this.props\n        return (postData ? postData.map((item) => {\n            const cardData = completeDataObject[item];\n            return cardData.network.id == 28 ? <> <img key={`idKey${item}`} className=\"\" data-id={cardData.id} src={cardData.postFileNew}\n                onError={this.handleImageError} style={{ display: 'none' }} /></> : \"\"\n        }\n\n        ) : ''\n        )\n    }\n}"],"names":["tikTok_Img_update","imageQueue","state","firstRequest","handleImageError","e","src","target","getAttribute","includes","push","processImageQueue","setState","imgTargets","document","getElementsByClassName","TIKTOK_UPDATE_STATUS","then","data","DELETE_RADIS_KEYS","shift","i","length","media","catch","error","NO_CAMERA_IMAGE","this","props","postData","completeDataObject","map","item","cardData","network","id","className","postFileNew","onError","style","display","Component"],"sourceRoot":""}